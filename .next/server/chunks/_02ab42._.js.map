{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\n// Define the type for the cached mongoose connection\r\ninterface MongooseCache {\r\n  conn: typeof mongoose | null;\r\n  promise: Promise<typeof mongoose> | null;\r\n}\r\n\r\n// Declare global namespace to extend NodeJS.Global\r\ndeclare global {\r\n  var mongoose: MongooseCache | undefined;\r\n}\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\r\n}\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI;\r\n\r\n// Initialize the cached connection\r\nconst cached: MongooseCache = global.mongoose || { conn: null, promise: null };\r\n\r\n// Set the global mongoose cache\r\nif (!global.mongoose) {\r\n  global.mongoose = cached;\r\n}\r\n\r\nasync function connectDB() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      bufferCommands: false,\r\n    };\r\n\r\n    cached.promise = mongoose.connect(MONGODB_URI!, opts).then((mongoose) => {\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (e) {\r\n    cached.promise = null;\r\n    throw e;\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB; "],"names":[],"mappings":";;;;;;AAaA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,mCAAmC;AACnC,MAAM,SAAwB,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE7E,gCAAgC;AAChC,IAAI,CAAC,OAAO,QAAQ,EAAE;IACpB,OAAO,QAAQ,GAAG;AACpB;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,6CAAS,OAAO,CAAC,aAAc,MAAM,IAAI,CAAC,CAAC;YAC1D,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/models/User.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nexport interface IUser extends mongoose.Document {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  role: 'user' | 'admin';\r\n  createdAt: Date;\r\n  comparePassword(candidatePassword: string): Promise<boolean>;\r\n}\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: [true, 'Please provide a name'],\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Please provide an email'],\r\n    unique: true,\r\n    lowercase: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'Please provide a password'],\r\n    minlength: 6,\r\n  },\r\n  role: {\r\n    type: String,\r\n    enum: ['user', 'admin'],\r\n    default: 'user',\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\n// Hash password before saving\r\nuserSchema.pre('save', async function(next) {\r\n  if (!this.isModified('password')) return next();\r\n  \r\n  try {\r\n    const salt = await bcrypt.genSalt(10);\r\n    this.password = await bcrypt.hash(this.password, salt);\r\n    next();\r\n  } catch (error: any) {\r\n    next(error);\r\n  }\r\n});\r\n\r\n// Method to compare password\r\nuserSchema.methods.comparePassword = async function(candidatePassword: string): Promise<boolean> {\r\n  try {\r\n    return await bcrypt.compare(candidatePassword, this.password);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default mongoose.models.User || mongoose.model<IUser>('User', userSchema); "],"names":[],"mappings":";;;;;;;;AAYA,MAAM,aAAa,IAAI,6CAAS,MAAM,CAAC;IACrC,MAAM;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;IAC3C;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,QAAQ;QACR,WAAW;IACb;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,WAAW;IACb;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAQ;SAAQ;QACvB,SAAS;IACX;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;AAEA,8BAA8B;AAC9B,WAAW,GAAG,CAAC,QAAQ,eAAe,IAAI;IACxC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,OAAO;IAEzC,IAAI;QACF,MAAM,OAAO,MAAM,6IAAO,OAAO,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,6IAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QACjD;IACF,EAAE,OAAO,OAAY;QACnB,KAAK;IACP;AACF;AAEA,6BAA6B;AAC7B,WAAW,OAAO,CAAC,eAAe,GAAG,eAAe,iBAAyB;IAC3E,IAAI;QACF,OAAO,MAAM,6IAAO,OAAO,CAAC,mBAAmB,IAAI,CAAC,QAAQ;IAC9D,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;uCAEe,6CAAS,MAAM,CAAC,IAAI,IAAI,6CAAS,KAAK,CAAQ,QAAQ"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/mongodb';\r\nimport User from '@/models/User';\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { name, email, password } = await request.json();\r\n\r\n    if (!name || !email || !password) {\r\n      return NextResponse.json(\r\n        { error: 'Please provide all required fields' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    await connectDB();\r\n\r\n    // Check if user already exists\r\n    const existingUser = await User.findOne({ email });\r\n    if (existingUser) {\r\n      return NextResponse.json(\r\n        { error: 'User already exists' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create new user\r\n    const user = await User.create({\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    return NextResponse.json(\r\n      { message: 'User created successfully', user: { id: user._id, name: user.name, email: user.email } },\r\n      { status: 201 }\r\n    );\r\n  } catch (error: any) {\r\n    return NextResponse.json(\r\n      { error: error.message || 'Something went wrong' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;;;;;;;;AAIO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEpD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU;YAChC,OAAO,wLAAa,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM;QAEN,+BAA+B;QAC/B,MAAM,eAAe,MAAM,iIAAK,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,wLAAa,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,MAAM,OAAO,MAAM,iIAAK,MAAM,CAAC;YAC7B;YACA;YACA;QACF;QAEA,OAAO,wLAAa,IAAI,CACtB;YAAE,SAAS;YAA6B,MAAM;gBAAE,IAAI,KAAK,GAAG;gBAAE,MAAM,KAAK,IAAI;gBAAE,OAAO,KAAK,KAAK;YAAC;QAAE,GACnG;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAY;QACnB,OAAO,wLAAa,IAAI,CACtB;YAAE,OAAO,MAAM,OAAO,IAAI;QAAuB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/api/auth/register/route/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}